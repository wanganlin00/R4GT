# 热图

## `pheatmap`

```{r}
library(pheatmap)
```

```{r}
# Create test matrix
options(digits = 3)
set.seed(10)
test = matrix(rnorm(200), 20, 10)
test[1:10, seq(1, 10, 2)] = test[1:10, seq(1, 10, 2)] + 3
test[11:20, seq(2, 10, 2)] = test[11:20, seq(2, 10, 2)] + 2
test[15:20, seq(2, 10, 2)] = test[15:20, seq(2, 10, 2)] + 4
colnames(test) = paste("Test", 1:10, sep = "")
rownames(test) = paste("Gene", 1:20, sep = "")

test
```

```{r}
pheatmap(test)
pheatmap(test, kmeans_k = 2)
pheatmap(test, scale = "row", clustering_distance_rows = "correlation")
pheatmap(test, color = colorRampPalette(c("navy", "white", "firebrick3"))(50))
pheatmap(test, cluster_row = FALSE)
pheatmap(test, legend = FALSE)
```

```{r}
# Show text within cells
pheatmap(test, display_numbers = TRUE)
pheatmap(test, display_numbers = TRUE, number_format = "\\%.1e")
pheatmap(test, display_numbers = matrix(ifelse(test > 5, "*", ""), nrow(test)))
pheatmap(test, cluster_row = FALSE, legend_breaks = -1:4, legend_labels = c("0",
"1e-4", "1e-3", "1e-2", "1e-1", "1"))
```

```{r}
annotation_col = data.frame(type=c(rep("normal",5),rep("tumor",5)))
rownames(annotation_col) <- colnames(test)
anno_colors <- list(type=c(normal="#1b9e77",tumor="#d95f02"))

pheatmap(
    test,
    show_rownames = T,
    show_colnames = F,
    cluster_rows = F,
    treeheight_col = 5,
    display_numbers = T,
    #gaps_col = 5,
    annotation_col = annotation_col,
    annotation_colors = anno_colors,
    annotation_legend =F
)
```

均一化z-score

```{r}
pheatmap(test,scale = "column",border_color = "green",fontsize = 8)
```

```{r}
pheatmap(test,scale = "row",border_color = NA,color = colorRampPalette(c("blue","white","red"))(200))

pheatmap(test,scale = "row",border_color = NA,color = colorRampPalette(c("darkblue", "green", "yellow"))(10))

```

## `geom_tile()`

```{r}
# 设置随机数种子以确保结果的可重复性  
set.seed(10)  
  
# 生成随机数据集  
mydata <- tibble(  
  year = 2000:2024,  
  lung = runif(25),  
  liver = runif(25), 
  bone = runif(25),  
  luk = runif(25),  
  eso = runif(25),  
  gas = runif(25),   
  eye = runif(25),  
  brain = runif(25),  
  pan = runif(25),  
  kidney = runif(25),  
  breast= runif(25),  
)  |> pivot_longer(cols = -1,
                   names_to = "cancer",
                   values_to = "morbidity")

ggplot(mydata, aes(year, cancer)) +  
  geom_tile(aes(fill =morbidity)) +  
  scale_fill_gradient(low = "white", high = "red")
```

## `ComplexHeatmap`

<https://jokergoo.github.io/ComplexHeatmap-reference/book/>

```{r}
if(!require(ComplexHeatmap)) BiocManager::install("ComplexHeatmap")

```

```{r}
set.seed(123)
nr1 = 4; nr2 = 8; nr3 = 6; nr = nr1 + nr2 + nr3
nc1 = 6; nc2 = 8; nc3 = 10; nc = nc1 + nc2 + nc3
mat = cbind(rbind(matrix(rnorm(nr1*nc1, mean = 1,   sd = 0.5), nrow  = nr1),
          matrix(rnorm(nr2*nc1, mean = 0,   sd = 0.5), nrow = nr2),
          matrix(rnorm(nr3*nc1, mean = 0,   sd = 0.5), nrow = nr3)),
    rbind(matrix(rnorm(nr1*nc2, mean = 0,   sd = 0.5), nrow = nr1),
          matrix(rnorm(nr2*nc2, mean = 1,   sd = 0.5), nrow = nr2),
          matrix(rnorm(nr3*nc2, mean = 0,   sd = 0.5), nrow = nr3)),
    rbind(matrix(rnorm(nr1*nc3, mean = 0.5, sd = 0.5), nrow = nr1),
          matrix(rnorm(nr2*nc3, mean = 0.5, sd = 0.5), nrow = nr2),
          matrix(rnorm(nr3*nc3, mean = 1,   sd = 0.5), nrow = nr3))
   )
mat = mat[sample(nr, nr), sample(nc, nc)] # random shuffle rows and columns
rownames(mat) = paste0("row", seq_len(nr))
colnames(mat) = paste0("column", seq_len(nc))

```

```{r}
Heatmap(mat)
```

```{r}
set.seed(123)
mat = matrix(rnorm(100), 10)
rownames(mat) = paste0("R", 1:10)
colnames(mat) = paste0("C", 1:10)
column_ha = HeatmapAnnotation(foo1 = runif(10), bar1 = anno_barplot(runif(10)))
row_ha = rowAnnotation(foo2 = runif(10), bar2 = anno_barplot(runif(10)))
Heatmap(mat, name = "mat", top_annotation = column_ha, right_annotation = row_ha)
```
