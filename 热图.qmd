# 热图

## `pheatmap`

```{r}
library(pheatmap)
```

```{r}
# read test matrix
test <- read.delim("data/heatmap/heatmap.txt",header = T,row.names = 1,sep = "\t")
test

sample_group <- read.delim("data/heatmap/sample.class.txt",header = T,row.names = 1,sep = "\t")
gene_group <- read.delim("data/heatmap/gene.class.txt",header = T,row.names = 1,sep = "\t")
```

```{r}
#| fig-width: 25
#| fig-asp: 0.75
pheatmap(test,
         annotation_legend = T,#legend_breaks = seq(-1,1,0.2), legend_labels = seq(-1,1,0.2),
         show_rownames = T,show_colnames = T,
         fontsize = 12,
         color = colorRampPalette(c("#0000ff","#ffffff","#ff0000"))(200),
         border_color = NA,
         scale = "row",       # 归一化
         cluster_rows = T,cluster_cols = T,clustering_distance_rows = "correlation",
         display_numbers = TRUE, number_format = "%.1e",
         
 
         
         treeheight_row = 12,
         treeheight_col = 12,
         
         annotation_row = gene_group,annotation_col = sample_group,
         )
```


## 相关性热图

```{r}
r <- cor(test,method = "pearson",use = "pairwise.complete.obs")

r

pheatmap(r,fontsize = 12,
         color = colorRampPalette(c("#0000ff","#ffffff","#ff0000"))(200),)
```


```{r}
pheatmap(test, kmeans_k = 2,
                 cellwidth = 30,cellheight = 25,)
```

```{r}
# Show text within cells
pheatmap(test, display_numbers = TRUE)
pheatmap(test, display_numbers = matrix(ifelse(test > 5, "*", ""), nrow(test)))
```


## `geom_tile()`

```{r}
# 设置随机数种子以确保结果的可重复性  
set.seed(10)  
  
# 生成随机数据集  
mydata <- tibble(  
  year = 2000:2024,  
  lung = runif(25),  
  liver = runif(25), 
  bone = runif(25),  
  luk = runif(25),  
  eso = runif(25),  
  gas = runif(25),   
  eye = runif(25),  
  brain = runif(25),  
  pan = runif(25),  
  kidney = runif(25),  
  breast= runif(25),  
)  |> pivot_longer(cols = -1,
                   names_to = "cancer",
                   values_to = "morbidity")

ggplot(mydata, aes(year, cancer)) +  
  geom_tile(aes(fill =morbidity)) +  
  scale_fill_gradient(low = "white", high = "red")
```

## `ComplexHeatmap`

<https://jokergoo.github.io/ComplexHeatmap-reference/book/>

```{r}
if(!require(ComplexHeatmap)) BiocManager::install("ComplexHeatmap")

```

```{r}
set.seed(123)
nr1 = 4; nr2 = 8; nr3 = 6; nr = nr1 + nr2 + nr3
nc1 = 6; nc2 = 8; nc3 = 10; nc = nc1 + nc2 + nc3
mat = cbind(rbind(matrix(rnorm(nr1*nc1, mean = 1,   sd = 0.5), nrow  = nr1),
          matrix(rnorm(nr2*nc1, mean = 0,   sd = 0.5), nrow = nr2),
          matrix(rnorm(nr3*nc1, mean = 0,   sd = 0.5), nrow = nr3)),
    rbind(matrix(rnorm(nr1*nc2, mean = 0,   sd = 0.5), nrow = nr1),
          matrix(rnorm(nr2*nc2, mean = 1,   sd = 0.5), nrow = nr2),
          matrix(rnorm(nr3*nc2, mean = 0,   sd = 0.5), nrow = nr3)),
    rbind(matrix(rnorm(nr1*nc3, mean = 0.5, sd = 0.5), nrow = nr1),
          matrix(rnorm(nr2*nc3, mean = 0.5, sd = 0.5), nrow = nr2),
          matrix(rnorm(nr3*nc3, mean = 1,   sd = 0.5), nrow = nr3))
   )
mat = mat[sample(nr, nr), sample(nc, nc)] # random shuffle rows and columns
rownames(mat) = paste0("row", seq_len(nr))
colnames(mat) = paste0("column", seq_len(nc))

```

```{r}
Heatmap(mat)
```

```{r}
set.seed(123)
mat = matrix(rnorm(100), 10)
rownames(mat) = paste0("R", 1:10)
colnames(mat) = paste0("C", 1:10)
column_ha = HeatmapAnnotation(foo1 = runif(10), bar1 = anno_barplot(runif(10)))
row_ha = rowAnnotation(foo2 = runif(10), bar2 = anno_barplot(runif(10)))
Heatmap(mat, name = "mat", top_annotation = column_ha, right_annotation = row_ha)
```
