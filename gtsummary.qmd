# gtsummary

<https://www.danieldsjoberg.com/gtsummary/index.html>

```{r}
library(gtsummary)
library(gt)
head(trial)
data("trial")
```

数据框中的每个变量都可以分配一个 `"label"` 属性

```{r}
attr(trial$trt,"label") <- '治疗'
attr(trial$trt,"label")
```

```{r}
trial2 <- trial %>% select(trt, age, grade)
str(trial2)
trial2 %>% tbl_summary()
```

-   **Label attributes** from the data set are automatically printed.

-   **Missing values** are listed as “Unknown” in the table.

## 自定义输出

| argument        | 描述                                        |
|:----------------|:--------------------------------------------|
| `label=`        | 指定表格中打印的变量标签                    |
| `type=`         | 指定变量类型（例如continuous, categorical等 |
| `statistic=`    | 更改显示的汇总统计数据                      |
| `digits=`       | 汇总统计数据将四舍五入的位数                |
| `missing=`      | 是否显示包含缺失观测值数的行                |
| `missing_text=` | 缺失数字行的文本标签                        |
| `sort=`         | 按频率更改分类级别的排序                    |
| `percent=`      | 打印列、行或单元格百分比                    |
| `include=`      | 要包含在汇总表中的变量列表                  |

```{r}
trial2 %>%
  tbl_summary(
    by = trt,
    statistic = list(
      all_continuous() ~ c("{median} ({p25},{p75})"),
      all_categorical() ~ "{n} / {N} ({p}%)"
    ),
    digits = list(starts_with("age") ~ 0,
                  grade ~ 2
    ),
    label = list(age ~ "Patient age",
                 grade ~ "Tumor Grade"),
    missing_text = "(NA)"
  )
```

| 函数                                                                                                         | 描述                                     |
|:--------------------------------------------------|:--------------------|
| [`add_p()`](https://www.danieldsjoberg.com/gtsummary/reference/add_p.html)                                   | 将 p 值添加到输出中，比较各组的值        |
| [`add_overall()`](https://www.danieldsjoberg.com/gtsummary/reference/add_overall.html)                       | 添加包含总体汇总统计数据的列             |
| [`add_n()`](https://www.danieldsjoberg.com/gtsummary/reference/add_n.html)                                   | 为每个变量添加一个包含 N（或缺少 N）的列 |
| [`add_difference()`](https://www.danieldsjoberg.com/gtsummary/reference/add_difference.html)                 | 为两组之间的差值、置信区间和 p 值添加列  |
| [`add_stat_label()`](https://www.danieldsjoberg.com/gtsummary/reference/add_stat_label.html)                 | 为每行中显示的汇总统计数据添加标签       |
| [`add_stat()`](https://www.danieldsjoberg.com/gtsummary/reference/add_stat.html)                             | 泛型函数，用于添加具有用户定义值的列     |
| [`add_q()`](https://www.danieldsjoberg.com/gtsummary/reference/add_q.html)                                   | 添加一列 Q 值以控制多个比较              |
| [`modify_header()`](https://www.danieldsjoberg.com/gtsummary/reference/modify.html)                          | 更新列标题                               |
| [`modify_footnote()`](https://www.danieldsjoberg.com/gtsummary/reference/modify.html)                        | 更新列脚注                               |
| [`modify_spanning_header()`](https://www.danieldsjoberg.com/gtsummary/reference/modify.html)                 | 更新跨标头                               |
| [`modify_caption()`](https://www.danieldsjoberg.com/gtsummary/reference/modify.html)                         | 更新表格标题/标题                        |
| [`bold_labels()`](https://www.danieldsjoberg.com/gtsummary/reference/bold_italicize_labels_levels.html)      | 粗体变量标签                             |
| [`bold_levels()`](https://www.danieldsjoberg.com/gtsummary/reference/bold_italicize_labels_levels.html)      | 粗体可变级别                             |
| [`italicize_labels()`](https://www.danieldsjoberg.com/gtsummary/reference/bold_italicize_labels_levels.html) | 将变量标签斜体化                         |
| [`italicize_levels()`](https://www.danieldsjoberg.com/gtsummary/reference/bold_italicize_labels_levels.html) | 斜体变量级别                             |
| [`bold_p()`](https://www.danieldsjoberg.com/gtsummary/reference/bold_p.html)                                 | 粗体显著性 p 值                          |

```{r}
trial2 |> 
    tbl_summary(by = trt) |> 
    add_p(
        
        test=list(all_continuous() ~ "wilcox.test", 
                  all_categorical() ~ "chisq.test"),
        pvalue_fun = ~ style_pvalue(.x, digits = 3)
        # pvalue_fun =purrr::partial(style_pvalue, digits = 3)
    ) 


```

```{r}
wilcox.test(age~trt,data = trial2)
table(trial2$grade,trial2$trt) |> as.matrix() |> chisq.test()
```

```{r}
x <- "333323222222323222222222223222222333344442323222344554554535444411111111111111111111122233434441534434433435456444533222233444444343331111222222222233333333333333344444444444444344444444444444"
str_split_1(x,pattern = "") |> parse_number() |> sum()
```

```{r}
trial2 %>%
    tbl_summary(by = trt) %>%
    add_overall() |>   # t添加总和
    add_n() |>
    # 修改注释
    modify_header(label ~ "**变量**") %>%
    modify_spanning_header(c("stat_1", "stat_2") ~ "**药物**") %>%
    modify_footnote(all_stat_cols() ~ "Median (IQR) or Frequency (%)") %>%
    modify_caption("**Table 1. Patient Characteristics**") %>%
    bold_labels()
```

## 主题

```{r}
library(gtsummary)
library(gt)
library(dplyr)

trial %>%
  select(trt, age, grade) %>%
  tbl_summary(by = trt) %>%
  add_p()
theme_gtsummary_journal(journal = "jama")
theme_gtsummary_compact()

#  清除所有先前设置的主题
reset_gtsummary_theme()
```

```{r}
my_theme <-
  list(
    # round large p-values to two places
    "pkgwide-fn:pvalue_fun" = function(x) style_pvalue(x, digits = 2),
    "pkgwide-fn:prependpvalue_fun" = function(x) style_pvalue(x, digits = 2, prepend_p = TRUE),
    # report median (IQR) and n (percent) as default stats in `tbl_summary()`
    "tbl_summary-str:continuous_stat" = "{median} ({p25} - {p75})",
    "tbl_summary-str:categorical_stat" = "{n} ({p})"
  )

trial %>%
  select(trt, age, grade) %>%
  tbl_summary(by = trt) %>%
  add_p()
set_gtsummary_theme(my_theme)
```

## 基线特征表

```{r}
df <- read_excel("data/三线表/gt.xlsx")



df <- df %>% 
    select(-1) %>% 
    mutate(across(1:17,as.factor))

glimpse(df)

```

## 回归模型结果

```{r}
# load dataset
data(Titanic)
df = as.data.frame(Titanic)

# load library
library(gtsummary)

# create the model
model = glm(Survived ~ Age + Class + Sex + Freq, family=binomial, data=df)

# generate table 
model %>%
  tbl_regression() %>% # regression summary function
  add_global_p() %>% # add p-values
  bold_labels() %>% # make label in bold
  italicize_levels() # make categories in label in italic



# generate table 
model %>%
  tbl_regression(intercept=TRUE, conf.level=0.9) %>%
  add_glance_source_note() %>%
  add_global_p() %>%
  add_q() 
```

## 比较模型结果

```{r}
data(trial)
library(survival)

model_reglog = glm(response ~ trt + grade, data=trial, family = binomial) %>% tbl_regression()
model_cox = coxph(Surv(ttdeath, death) ~ trt + grade, data=trial) %>% tbl_regression()

tbl_merge(
  list(model_reglog, model_cox),
  tab_spanner = c("**Tumor Response**", "**Time to Death**")
)
```
